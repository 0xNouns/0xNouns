/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NounsDescriptor,
  NounsDescriptorInterface,
} from "../NounsDescriptor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PartsLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ISVGRenderer",
        name: "renderer",
        type: "address",
      },
    ],
    name: "RendererUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accessories",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessoryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_accessory",
        type: "bytes",
      },
    ],
    name: "addAccessory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_background",
        type: "string",
      },
    ],
    name: "addBackground",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_body",
        type: "bytes",
      },
    ],
    name: "addBody",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_glasses",
        type: "bytes",
      },
    ],
    name: "addGlasses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_head",
        type: "bytes",
      },
    ],
    name: "addHead",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_accessories",
        type: "bytes[]",
      },
    ],
    name: "addManyAccessories",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_backgrounds",
        type: "string[]",
      },
    ],
    name: "addManyBackgrounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_bodies",
        type: "bytes[]",
      },
    ],
    name: "addManyBodies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_glasses",
        type: "bytes[]",
      },
    ],
    name: "addManyGlasses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_heads",
        type: "bytes[]",
      },
    ],
    name: "addManyHeads",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arePartsLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backgroundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "backgrounds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bodies",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bodyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "dataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "generateSVGImage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "genericDataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "getPartsForSeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "image",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "palette",
            type: "address",
          },
        ],
        internalType: "struct ISVGRenderer.Part[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "glasses",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glassesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "headCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "heads",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockParts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "palettes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "paletteIndex",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "palette",
        type: "bytes",
      },
    ],
    name: "setPalette",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002dff38038062002dff8339810160408190526200003491620000b5565b6200003f3362000065565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000c857600080fd5b81516001600160a01b0381168114620000e057600080fd5b9392505050565b612d0880620000f76000396000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c8063773b97711161012a5780639a796205116100bd578063bf61df1b1161008c578063e79c9ea611610071578063e79c9ea6146104e7578063eba81806146104fa578063f2fde38b1461050257600080fd5b8063bf61df1b146104bf578063cc2aa091146104df57600080fd5b80639a79620514610450578063a51e412414610463578063b982d1b914610476578063bc2d45fe1461048957600080fd5b80638a85a1e8116100f95780638a85a1e8146103c75780638ada6b0f146103da5780638da5cb5b1461041f57806391b7916a1461043d57600080fd5b8063773b9771146103595780637a34aad31461038e5780637ca94210146103a157806387db11bd146103b457600080fd5b806344cee73c116101bd5780635a503f131161018c578063615bda1011610171578063615bda101461032b578063638ac2701461033e578063715018a61461035157600080fd5b80635a503f13146103055780635e70664c1461031857600080fd5b806344cee73c146102cf5780634531c0a8146102e25780634daebac2146102ea57806356d3163d146102f257600080fd5b80632a1d0769116101f95780632a1d07691461028f5780632ea04300146102975780633cfdafd3146102aa5780634479cef2146102bd57600080fd5b80630475d8631461022b57806304bde4dd1461024057806317b552ab146102695780632715c90e1461027c575b600080fd5b61023e610239366004612287565b610515565b005b61025361024e3660046122c9565b61063a565b604051610260919061235c565b60405180910390f35b61023e6102773660046123b1565b6106e6565b61023e61028a3660046123b1565b6107c6565b61023e6108a2565b6102536102a5366004612511565b6109de565b6102536102b836600461252d565b610b8a565b6007545b604051908152602001610260565b6102536102dd3660046122c9565b610b96565b6003546102c1565b6005546102c1565b61023e61030036600461257c565b610ba6565b6102536103133660046122c9565b610c86565b61023e6103263660046123b1565b610c96565b61023e6103393660046123b1565b610d72565b61025361034c36600461252d565b610e4e565b61023e610eba565b60015461037e9074010000000000000000000000000000000000000000900460ff1681565b6040519015158152602001610260565b61023e61039c366004612287565b610f2d565b6102536103af3660046122c9565b611048565b6102536103c2366004612635565b611058565b61023e6103d5366004612287565b611210565b6001546103fa9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610260565b60005473ffffffffffffffffffffffffffffffffffffffff166103fa565b61023e61044b366004612287565b61132b565b61023e61045e3660046123b1565b611446565b61023e610471366004612287565b611522565b6102536104843660046122c9565b61163d565b6103fa6104973660046126bb565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6104d26104cd366004612511565b61164d565b60405161026091906126d6565b6006546102c1565b61023e6104f5366004612780565b611ada565b6004546102c1565b61023e61051036600461257c565b611b4c565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60015474010000000000000000000000000000000000000000900460ff16156105ec5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610578565b60005b818110156106355761062383838381811061060c5761060c6127d3565b905060200281019061061e9190612802565b611c48565b8061062d81612896565b9150506105ef565b505050565b6003818154811061064a57600080fd5b906000526020600020016000915090508054610665906128cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610691906128cf565b80156106de5780601f106106b3576101008083540402835291602001916106de565b820191906000526020600020905b8154815290600101906020018083116106c157829003601f168201915b505050505081565b60005473ffffffffffffffffffffffffffffffffffffffff16331461074d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b60015474010000000000000000000000000000000000000000900460ff16156107b85760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610578565b6107c28282611c48565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461082d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b60015474010000000000000000000000000000000000000000900460ff16156108985760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610578565b6107c28282611c85565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b60015474010000000000000000000000000000000000000000900460ff16156109745760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610578565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790556040517f1680ee6d421f70ed6030d2fc4fcb50217a5dd617858d56562b119eca59172e5790600090a1565b6060600060405180604001604052806109f68561164d565b81526020016003856000015165ffffffffffff1681548110610a1a57610a1a6127d3565b906000526020600020018054610a2f906128cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5b906128cf565b8015610aa85780601f10610a7d57610100808354040283529160200191610aa8565b820191906000526020600020905b815481529060010190602001808311610a8b57829003601f168201915b5050509190925250506001546040517f22cc1ad600000000000000000000000000000000000000000000000000000000815291925073__$e1d8844a0810dc0e87a665b1f2b5fa7c69$__916322cc1ad691610b209173ffffffffffffffffffffffffffffffffffffffff9091169085906004016129a1565b600060405180830381865af4158015610b3d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b839190810190612a13565b9392505050565b6060610b838383610e4e565b6004818154811061064a57600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff163314610c0d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f482cbbbcf912da3be80deb8503ae1e94c0b7d5d1d0ec0af3d9d6403e06e609ee9060200160405180910390a150565b6006818154811061064a57600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff163314610cfd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b60015474010000000000000000000000000000000000000000900460ff1615610d685760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610578565b6107c28282611cc2565b60005473ffffffffffffffffffffffffffffffffffffffff163314610dd95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b60015474010000000000000000000000000000000000000000900460ff1615610e445760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610578565b6107c28282611cff565b60606000610e5b84611d3c565b9050600081604051602001610e709190612a81565b6040516020818303038152906040529050600082604051602001610e949190612ac6565b6040516020818303038152906040529050610eb0828287611058565b9695505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b610f2b6000611e76565b565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b60015474010000000000000000000000000000000000000000900460ff1615610fff5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610578565b60005b818110156106355761103683838381811061101f5761101f6127d3565b90506020028101906110319190612802565b611eeb565b8061104081612896565b915050611002565b6005818154811061064a57600080fd5b6060600060405180608001604052808681526020018581526020016003856000015165ffffffffffff1681548110611092576110926127d3565b9060005260206000200180546110a7906128cf565b80601f01602080910402602001604051908101604052809291908181526020018280546110d3906128cf565b80156111205780601f106110f557610100808354040283529160200191611120565b820191906000526020600020905b81548152906001019060200180831161110357829003601f168201915b505050505081526020016111338561164d565b90526001546040517f7eefcc2400000000000000000000000000000000000000000000000000000000815291925073__$e1d8844a0810dc0e87a665b1f2b5fa7c69$__91637eefcc24916111a49173ffffffffffffffffffffffffffffffffffffffff909116908590600401612b32565b600060405180830381865af41580156111c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526112079190810190612a13565b95945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146112775760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b60015474010000000000000000000000000000000000000000900460ff16156112e25760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610578565b60005b8181101561063557611319838383818110611302576113026127d3565b90506020028101906113149190612802565b611c85565b8061132381612896565b9150506112e5565b60005473ffffffffffffffffffffffffffffffffffffffff1633146113925760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b60015474010000000000000000000000000000000000000000900460ff16156113fd5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610578565b60005b818110156106355761143483838381811061141d5761141d6127d3565b905060200281019061142f9190612802565b611cc2565b8061143e81612896565b915050611400565b60005473ffffffffffffffffffffffffffffffffffffffff1633146114ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b60015474010000000000000000000000000000000000000000900460ff16156115185760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610578565b6107c28282611eeb565b60005473ffffffffffffffffffffffffffffffffffffffff1633146115895760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b60015474010000000000000000000000000000000000000000900460ff16156115f45760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b6564000000000000000000000000000000006044820152606401610578565b60005b818110156106355761162b838383818110611614576116146127d3565b90506020028101906116269190612802565b611cff565b8061163581612896565b9150506115f7565b6007818154811061064a57600080fd5b606060006004836020015165ffffffffffff1681548110611670576116706127d3565b906000526020600020018054611685906128cf565b80601f01602080910402602001604051908101604052809291908181526020018280546116b1906128cf565b80156116fe5780601f106116d3576101008083540402835291602001916116fe565b820191906000526020600020905b8154815290600101906020018083116116e157829003601f168201915b5050505050905060006005846040015165ffffffffffff1681548110611726576117266127d3565b90600052602060002001805461173b906128cf565b80601f0160208091040260200160405190810160405280929190818152602001828054611767906128cf565b80156117b45780601f10611789576101008083540402835291602001916117b4565b820191906000526020600020905b81548152906001019060200180831161179757829003601f168201915b5050505050905060006006856060015165ffffffffffff16815481106117dc576117dc6127d3565b9060005260206000200180546117f1906128cf565b80601f016020809104026020016040519081016040528092919081815260200182805461181d906128cf565b801561186a5780601f1061183f5761010080835404028352916020019161186a565b820191906000526020600020905b81548152906001019060200180831161184d57829003601f168201915b5050505050905060006007866080015165ffffffffffff1681548110611892576118926127d3565b9060005260206000200180546118a7906128cf565b80601f01602080910402602001604051908101604052809291908181526020018280546118d3906128cf565b80156119205780601f106118f557610100808354040283529160200191611920565b820191906000526020600020905b81548152906001019060200180831161190357829003601f168201915b505050505090506000600467ffffffffffffffff811115611943576119436123e7565b60405190808252806020026020018201604052801561198957816020015b6040805180820190915260608152600060208201528152602001906001900390816119615790505b50905060405180604001604052808681526020016119a687611f28565b73ffffffffffffffffffffffffffffffffffffffff16815250816000815181106119d2576119d26127d3565b602002602001018190525060405180604001604052808581526020016119f786611f28565b73ffffffffffffffffffffffffffffffffffffffff1681525081600181518110611a2357611a236127d3565b60200260200101819052506040518060400160405280848152602001611a4885611f28565b73ffffffffffffffffffffffffffffffffffffffff1681525081600281518110611a7457611a746127d3565b60200260200101819052506040518060400160405280838152602001611a9984611f28565b73ffffffffffffffffffffffffffffffffffffffff1681525081600381518110611ac557611ac56127d3565b60209081029190910101529695505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611b415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b610635838383611f76565b60005473ffffffffffffffffffffffffffffffffffffffff163314611bb35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610578565b73ffffffffffffffffffffffffffffffffffffffff8116611c3c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610578565b611c4581611e76565b50565b60058054600181018255600091909152610635907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018383612184565b60048054600181018255600091909152610635907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018383612184565b60038054600181018255600091909152610635907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018383612184565b60078054600181018255600091909152610635907fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018383612184565b606081611d7c57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611da65780611d9081612896565b9150611d9f9050600a83612c10565b9150611d80565b60008167ffffffffffffffff811115611dc157611dc16123e7565b6040519080825280601f01601f191660200182016040528015611deb576020820181803683370190505b5090505b8415611e6e57611e00600183612c24565b9150611e0d600a86612c3b565b611e18906030612c4f565b60f81b818381518110611e2d57611e2d6127d3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611e67600a86612c10565b9450611def565b949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60068054600181018255600091909152610635907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018383612184565b60006002600083600081518110611f4157611f416127d3565b0160209081015160f81c82528101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff1692915050565b80611fc35760405162461bcd60e51b815260206004820152600d60248201527f456d7074792070616c65747465000000000000000000000000000000000000006044820152606401610578565b611fce600382612c3b565b158015611fdd57506103008111155b6120295760405162461bcd60e51b815260206004820152601260248201527f4261642070616c65747465206c656e67746800000000000000000000000000006044820152606401610578565b600061206a83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506120c692505050565b60ff94909416600090815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90951694909417909355505050565b600080826040516020016120da9190612c67565b60405160208183030381529060405290506000816040516020016120fe9190612c8d565b60405160208183030381529060405290508051602082016000f0925073ffffffffffffffffffffffffffffffffffffffff831661217d5760405162461bcd60e51b815260206004820152601160248201527f4445504c4f594d454e545f4641494c45440000000000000000000000000000006044820152606401610578565b5050919050565b828054612190906128cf565b90600052602060002090601f0160209004810192826121b25760008555612216565b82601f106121e9578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555612216565b82800160010185558215612216579182015b828111156122165782358255916020019190600101906121fb565b50612222929150612226565b5090565b5b808211156122225760008155600101612227565b60008083601f84011261224d57600080fd5b50813567ffffffffffffffff81111561226557600080fd5b6020830191508360208260051b850101111561228057600080fd5b9250929050565b6000806020838503121561229a57600080fd5b823567ffffffffffffffff8111156122b157600080fd5b6122bd8582860161223b565b90969095509350505050565b6000602082840312156122db57600080fd5b5035919050565b60005b838110156122fd5781810151838201526020016122e5565b8381111561230c576000848401525b50505050565b6000815180845261232a8160208601602086016122e2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610b836020830184612312565b60008083601f84011261238157600080fd5b50813567ffffffffffffffff81111561239957600080fd5b60208301915083602082850101111561228057600080fd5b600080602083850312156123c457600080fd5b823567ffffffffffffffff8111156123db57600080fd5b6122bd8582860161236f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561245d5761245d6123e7565b604052919050565b803565ffffffffffff8116811461247b57600080fd5b919050565b600060a0828403121561249257600080fd5b60405160a0810181811067ffffffffffffffff821117156124b5576124b56123e7565b6040529050806124c483612465565b81526124d260208401612465565b60208201526124e360408401612465565b60408201526124f460608401612465565b606082015261250560808401612465565b60808201525092915050565b600060a0828403121561252357600080fd5b610b838383612480565b60008060c0838503121561254057600080fd5b823591506125518460208501612480565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff81168114611c4557600080fd5b60006020828403121561258e57600080fd5b8135610b838161255a565b600067ffffffffffffffff8211156125b3576125b36123e7565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126125f057600080fd5b81356126036125fe82612599565b612416565b81815284602083860101111561261857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060e0848603121561264a57600080fd5b833567ffffffffffffffff8082111561266257600080fd5b61266e878388016125df565b9450602086013591508082111561268457600080fd5b50612691868287016125df565b9250506126a18560408601612480565b90509250925092565b803560ff8116811461247b57600080fd5b6000602082840312156126cd57600080fd5b610b83826126aa565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612772577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08984030185528151805187855261273f88860182612312565b9189015173ffffffffffffffffffffffffffffffffffffffff1694890194909452948701949250908601906001016126fd565b509098975050505050505050565b60008060006040848603121561279557600080fd5b61279e846126aa565b9250602084013567ffffffffffffffff8111156127ba57600080fd5b6127c68682870161236f565b9497909650939450505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261283757600080fd5b83018035915067ffffffffffffffff82111561285257600080fd5b60200191503681900382131561228057600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156128c8576128c8612867565b5060010190565b600181811c908216806128e357607f821691505b6020821081141561291d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000815180845260208085019450848260051b860182860160005b8581101561299457838303895281516040815181865261296082870182612312565b9288015173ffffffffffffffffffffffffffffffffffffffff1695880195909552509885019892509084019060010161293e565b5090979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600082516040808401526129d86080840182612923565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016060850152610eb08282612312565b600060208284031215612a2557600080fd5b815167ffffffffffffffff811115612a3c57600080fd5b8201601f81018413612a4d57600080fd5b8051612a5b6125fe82612599565b818152856020838501011115612a7057600080fd5b6112078260208301602086016122e2565b7f4e6f756e20000000000000000000000000000000000000000000000000000000815260008251612ab98160058501602087016122e2565b9190910160050192915050565b7f4e6f756e20000000000000000000000000000000000000000000000000000000815260008251612afe8160058501602087016122e2565b7f2069732061206d656d626572206f6620746865204e6f756e732044414f0000006005939091019283015250602201919050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000825160806040840152612b6a60c0840182612312565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc080858403016060860152612ba68383612312565b92506040860151915080858403016080860152612bc38383612312565b925060608601519150808584030160a086015250610eb08282612923565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612c1f57612c1f612be1565b500490565b600082821015612c3657612c36612867565b500390565b600082612c4a57612c4a612be1565b500690565b60008219821115612c6257612c62612867565b500190565b6000815260008251612c808160018501602087016122e2565b9190910160010192915050565b7f600b5981380380925939f3000000000000000000000000000000000000000000815260008251612cc581600b8501602087016122e2565b91909101600b019291505056fea264697066735822122096f0028faa1dc97a133c925b15f61818f9ff75354d2dfccce9917a73fdb2106064736f6c634300080c0033";

type NounsDescriptorConstructorParams =
  | [linkLibraryAddresses: NounsDescriptorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsDescriptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class NounsDescriptor__factory extends ContractFactory {
  constructor(...args: NounsDescriptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        NounsDescriptor__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = "NounsDescriptor";
  }

  static linkBytecode(
    linkLibraryAddresses: NounsDescriptorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e1d8844a0810dc0e87a665b1f2b5fa7c69\\$__", "g"),
      linkLibraryAddresses["contracts/libs/NFTDescriptor.sol:NFTDescriptor"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _renderer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NounsDescriptor> {
    return super.deploy(_renderer, overrides || {}) as Promise<NounsDescriptor>;
  }
  getDeployTransaction(
    _renderer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_renderer, overrides || {});
  }
  attach(address: string): NounsDescriptor {
    return super.attach(address) as NounsDescriptor;
  }
  connect(signer: Signer): NounsDescriptor__factory {
    return super.connect(signer) as NounsDescriptor__factory;
  }
  static readonly contractName: "NounsDescriptor";
  public readonly contractName: "NounsDescriptor";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsDescriptorInterface {
    return new utils.Interface(_abi) as NounsDescriptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsDescriptor {
    return new Contract(address, _abi, signerOrProvider) as NounsDescriptor;
  }
}

export interface NounsDescriptorLibraryAddresses {
  ["contracts/libs/NFTDescriptor.sol:NFTDescriptor"]: string;
}
