/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NounsDescriptor,
  NounsDescriptorInterface,
} from "../NounsDescriptor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INounsArt",
        name: "_art",
        type: "address",
      },
      {
        internalType: "contract ISVGRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract INounsArt",
        name: "art",
        type: "address",
      },
    ],
    name: "ArtUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PartsLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ISVGRenderer",
        name: "renderer",
        type: "address",
      },
    ],
    name: "RendererUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "accessoryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "accessory",
        type: "bytes",
      },
    ],
    name: "addAccessory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "background",
        type: "string",
      },
    ],
    name: "addBackground",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "body",
        type: "bytes",
      },
    ],
    name: "addBody",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "glasses",
        type: "bytes",
      },
    ],
    name: "addGlasses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "head",
        type: "bytes",
      },
    ],
    name: "addHead",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "accessories",
        type: "bytes[]",
      },
    ],
    name: "addManyAccessories",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "backgrounds",
        type: "string[]",
      },
    ],
    name: "addManyBackgrounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "bodies",
        type: "bytes[]",
      },
    ],
    name: "addManyBodies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "glasses",
        type: "bytes[]",
      },
    ],
    name: "addManyGlasses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "heads",
        type: "bytes[]",
      },
    ],
    name: "addManyHeads",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arePartsLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "art",
    outputs: [
      {
        internalType: "contract INounsArt",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backgroundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bodyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "dataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "generateSVGImage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "genericDataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "getPartsForSeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "image",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "palette",
            type: "address",
          },
        ],
        internalType: "struct ISVGRenderer.Part[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glassesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "headCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockParts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INounsArt",
        name: "_art",
        type: "address",
      },
    ],
    name: "setArt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "paletteIndex",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "palette",
        type: "bytes",
      },
    ],
    name: "setPalette",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002dc738038062002dc78339810160408190526200003491620000da565b6200003f3362000071565b600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905562000119565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000d757600080fd5b50565b60008060408385031215620000ee57600080fd5b8251620000fb81620000c1565b60208401519092506200010e81620000c1565b809150509250929050565b612c9e80620001296000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063773b9771116101045780639a796205116100a2578063e6b1a3ae11610071578063e6b1a3ae146103f6578063e79c9ea614610409578063eba818061461041c578063f2fde38b1461042457600080fd5b80639a796205146103a8578063a51e4124146103bb578063bf61df1b146103ce578063cc2aa091146103ee57600080fd5b80638a85a1e8116100de5780638a85a1e81461035e5780638ada6b0f146103715780638da5cb5b1461038457806391b7916a1461039557600080fd5b8063773b9771146103035780637a34aad31461033857806387db11bd1461034b57600080fd5b80634479cef21161017c5780635e70664c1161014b5780635e70664c146102c2578063615bda10146102d5578063638ac270146102e8578063715018a6146102fb57600080fd5b80634479cef2146102895780634531c0a81461029f5780634daebac2146102a757806356d3163d146102af57600080fd5b80632a1d0769116101b85780632a1d07691461021a5780632ea0430014610222578063301bd28e1461024b5780633cfdafd31461027657600080fd5b80630475d863146101df57806317b552ab146101f45780632715c90e14610207575b600080fd5b6101f26101ed3660046121d9565b610437565b005b6101f261020236600461225d565b610582565b6101f261021536600461225d565b610692565b6101f26107a2565b61023561023036600461239f565b6108d1565b6040516102429190612417565b60405180910390f35b60015461025e906001600160a01b031681565b6040516001600160a01b039091168152602001610242565b61023561028436600461242a565b610a35565b610291610a41565b604051908152602001610242565b610291610acd565b610291610b30565b6101f26102bd36600461246c565b610b93565b6101f26102d036600461225d565b610c5a565b6101f26102e336600461225d565b610d6a565b6102356102f636600461242a565b610e7a565b6101f2610ee6565b6002546103289074010000000000000000000000000000000000000000900460ff1681565b6040519015158152602001610242565b6101f26103463660046121d9565b610f4c565b610235610359366004612507565b61105c565b6101f261036c3660046121d9565b6111ce565b60025461025e906001600160a01b031681565b6000546001600160a01b031661025e565b6101f26103a33660046121d9565b6112de565b6101f26103b636600461225d565b6113ee565b6101f26103c93660046121d9565b6114fe565b6103e16103dc36600461239f565b61160e565b604051610242919061257c565b6102916119e2565b6101f261040436600461246c565b611a45565b6101f2610417366004612619565b611b70565b610291611d47565b6101f261043236600461246c565b611daa565b6000546001600160a01b031633146104965760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60025474010000000000000000000000000000000000000000900460ff16156105015760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b656400000000000000000000000000000000604482015260640161048d565b6001546040517f0475d8630000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690630475d8639061054c9085908590600401612703565b600060405180830381600087803b15801561056657600080fd5b505af115801561057a573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146105dc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048d565b60025474010000000000000000000000000000000000000000900460ff16156106475760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b656400000000000000000000000000000000604482015260640161048d565b6001546040517f17b552ab0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906317b552ab9061054c9085908590600401612787565b6000546001600160a01b031633146106ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048d565b60025474010000000000000000000000000000000000000000900460ff16156107575760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b656400000000000000000000000000000000604482015260640161048d565b6001546040517f2715c90e0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690632715c90e9061054c9085908590600401612787565b6000546001600160a01b031633146107fc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048d565b60025474010000000000000000000000000000000000000000900460ff16156108675760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b656400000000000000000000000000000000604482015260640161048d565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790556040517f1680ee6d421f70ed6030d2fc4fcb50217a5dd617858d56562b119eca59172e5790600090a1565b6060600060405180604001604052806108e98561160e565b815260015485516040517f04bde4dd00000000000000000000000000000000000000000000000000000000815265ffffffffffff90911660048201526020909201916001600160a01b03909116906304bde4dd90602401600060405180830381865afa15801561095d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261098591908101906127cb565b90526002546040517f22cc1ad600000000000000000000000000000000000000000000000000000000815291925073__$e1d8844a0810dc0e87a665b1f2b5fa7c69$__916322cc1ad6916109e9916001600160a01b0390911690859060040161287b565b600060405180830381865af4158015610a06573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a2e91908101906127cb565b9392505050565b6060610a2e8383610e7a565b600154604080517f4479cef200000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691634479cef29160048083019260209291908290030181865afa158015610aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac891906128e0565b905090565b600154604080517f4531c0a800000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691634531c0a89160048083019260209291908290030181865afa158015610aa4573d6000803e3d6000fd5b600154604080517f4daebac200000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691634daebac29160048083019260209291908290030181865afa158015610aa4573d6000803e3d6000fd5b6000546001600160a01b03163314610bed5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048d565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f482cbbbcf912da3be80deb8503ae1e94c0b7d5d1d0ec0af3d9d6403e06e609ee906020015b60405180910390a150565b6000546001600160a01b03163314610cb45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048d565b60025474010000000000000000000000000000000000000000900460ff1615610d1f5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b656400000000000000000000000000000000604482015260640161048d565b6001546040517f5e70664c0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690635e70664c9061054c9085908590600401612787565b6000546001600160a01b03163314610dc45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048d565b60025474010000000000000000000000000000000000000000900460ff1615610e2f5760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b656400000000000000000000000000000000604482015260640161048d565b6001546040517f615bda100000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063615bda109061054c9085908590600401612787565b60606000610e8784611e8c565b9050600081604051602001610e9c91906128f9565b6040516020818303038152906040529050600082604051602001610ec0919061293e565b6040516020818303038152906040529050610edc82828761105c565b9695505050505050565b6000546001600160a01b03163314610f405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048d565b610f4a6000611fc6565b565b6000546001600160a01b03163314610fa65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048d565b60025474010000000000000000000000000000000000000000900460ff16156110115760405162461bcd60e51b815260206004820152601060248201527f506172747320617265206c6f636b656400000000000000000000000000000000604482015260640161048d565b6001546040517f7a34aad30000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690637a34aad39061054c9085908590600401612703565b6040805160808101825284815260208101849052600154835183517f04bde4dd00000000000000000000000000000000000000000000000000000000815265ffffffffffff909116600482015260609360009392908301916001600160a01b03909116906304bde4dd90602401600060405180830381865afa1580156110e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261110e91908101906127cb565b815260200161111c8561160e565b90526002546040517f7eefcc2400000000000000000000000000000000000000000000000000000000815291925073__$e1d8844a0810dc0e87a665b1f2b5fa7c69$";

type NounsDescriptorConstructorParams =
  | [linkLibraryAddresses: NounsDescriptorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsDescriptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class NounsDescriptor__factory extends ContractFactory {
  constructor(...args: NounsDescriptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        NounsDescriptor__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = "NounsDescriptor";
  }

  static linkBytecode(
    linkLibraryAddresses: NounsDescriptorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e1d8844a0810dc0e87a665b1f2b5fa7c69\\$__", "g"),
      linkLibraryAddresses["contracts/libs/NFTDescriptor.sol:NFTDescriptor"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _art: string,
    _renderer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NounsDescriptor> {
    return super.deploy(
      _art,
      _renderer,
      overrides || {}
    ) as Promise<NounsDescriptor>;
  }
  getDeployTransaction(
    _art: string,
    _renderer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_art, _renderer, overrides || {});
  }
  attach(address: string): NounsDescriptor {
    return super.attach(address) as NounsDescriptor;
  }
  connect(signer: Signer): NounsDescriptor__factory {
    return super.connect(signer) as NounsDescriptor__factory;
  }
  static readonly contractName: "NounsDescriptor";
  public readonly contractName: "NounsDescriptor";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsDescriptorInterface {
    return new utils.Interface(_abi) as NounsDescriptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsDescriptor {
    return new Contract(address, _abi, signerOrProvider) as NounsDescriptor;
  }
}

export interface NounsDescriptorLibraryAddresses {
  ["contracts/libs/NFTDescriptor.sol:NFTDescriptor"]: string;
}
